####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
#
# Before building the docker image run:
#
# mvn package
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/blockchain-tool-jvm .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/blockchain-tool-jvm
#
# If you want to include the debug port into your docker image
# you will have to expose the debug port (default 5005) like this :  EXPOSE 8080 5050
# 
# Then run the container using : 
#
# docker run -i --rm -p 8080:8080 -p 5005:5005 -e JAVA_ENABLE_DEBUG="true" quarkus/blockchain-tool-jvm
#
###
#FROM registry.access.redhat.com/ubi8/ubi-minimal:8.1
#
#ARG JAVA_PACKAGE=java-11-openjdk-headless
#ARG RUN_JAVA_VERSION=1.3.7
#
#ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'
#
## Install java and the run-java script
## Also set up permissions for user `1001`
#RUN microdnf install curl ca-certificates ${JAVA_PACKAGE} \
#    && microdnf update \
#    && microdnf clean all \
#    && mkdir /deployments \
#    && chown 1001 /deployments \
#    && chmod "g+rwX" /deployments \
#    && chown 1001:root /deployments \
#    && curl https://www.dropbox.com/s/lhj2xx90bbfnbda/run-java.sh?dl=1 -o /deployments/run-java.sh \
#    && chown 1001 /deployments/run-java.sh \
#    && chmod 540 /deployments/run-java.sh \
#    && echo "securerandom.source=file:/dev/urandom" >> /etc/alternatives/jre/lib/security/java.security
#
## Configure the JAVA_OPTIONS, you can add -XshowSettings:vm to also display the heap size.
#ENV JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
#
#COPY target/lib/* /deployments/lib/
#COPY target/*-runner.jar /deployments/app.jar
#
#EXPOSE 8080
#USER 1001
#
#ENTRYPOINT [ "/deployments/run-java.sh" ]



# Stage 1 : build with maven builder image with native capabilities
FROM quay.io/quarkus/centos-quarkus-maven:20.0.0-java11 AS build
COPY src /usr/src/app/src
COPY pom.xml /usr/src/app
USER root
RUN chown -R quarkus /usr/src/app
USER quarkus
RUN mvn -f /usr/src/app/pom.xml -Pnative clean package

## Stage 2 : create the docker final image
FROM registry.access.redhat.com/ubi8/ubi-minimal
WORKDIR /work/
COPY --from=build /usr/src/app/target/*-runner /work/application

# set up permissions for user `1001`
RUN chmod 775 /work /work/application \
  && chown -R 1001 /work \
  && chmod -R "g+rwX" /work \
  && chown -R 1001:root /work

EXPOSE 8080
USER 1001

CMD ["./application", "-Dquarkus.http.host=0.0.0.0"]